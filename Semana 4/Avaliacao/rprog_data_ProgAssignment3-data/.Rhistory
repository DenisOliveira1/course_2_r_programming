print(tail(subset[,c(2,11)]))
}
else if (outcome == "heart failure"){
indexes = !is.na(subset[, 17])
subset = subset[indexes,]
subset[, 17] <- as.numeric(subset[, 17])
subset = subset[order(subset[,17]),]
}
else if (outcome == "pneumonia"){
indexes = !is.na(subset[, 23])
subset = subset[indexes,]
subset[, 23] <- as.numeric(subset[, 23])
subset = subset[order(subset[,23]),]
}
if(num == "best"){
return(subset[1,2])
}
else if(num == "worst"){
return(tail(subset[,2],1))
} else{
return(subset[num,2])
}
}
rankhospital("MD", "heart attack", "worst")
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Return hospital name in that state with the given rank 0-day death rate
indexes = dataset[, "State"] == "MD"
subset = dataset[indexes,]
subset = subset[order(subset[,2]),]
indexes = !is.na(subset[, 11])
print(indexes)
subset[],11]
subset[,11]
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
uniqueStates = unique(dataset$State)
if (is.na(match(state,uniqueStates))){
stop("invalid state")
}
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## Return hospital name in that state with the given rank 0-day death rate
indexes = dataset[, "State"] == state
subset = dataset[indexes,]
subset = subset[order(subset[,2]),]
if (outcome == "heart attack"){
subset[, 11] <- as.numeric(subset[, 11])
indexes = !is.na(subset[, 11])
subset = subset[indexes,]
subset = subset[order(subset[,11]),]
print(indexes)
print(tail(subset[,c(2,11)]))
}
else if (outcome == "heart failure"){
subset[, 17] <- as.numeric(subset[, 17])
indexes = !is.na(subset[, 17])
subset = subset[indexes,]
subset = subset[order(subset[,17]),]
}
else if (outcome == "pneumonia"){
subset[, 23] <- as.numeric(subset[, 23])
indexes = !is.na(subset[, 23])
subset = subset[indexes,]
subset = subset[order(subset[,23]),]
}
if(num == "best"){
return(subset[1,2])
}
else if(num == "worst"){
return(tail(subset[,2],1))
} else{
return(subset[num,2])
}
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
uniqueStates = unique(dataset$State)
if (is.na(match(state,uniqueStates))){
stop("invalid state")
}
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## Return hospital name in that state with the given rank 0-day death rate
indexes = dataset[, "State"] == state
subset = dataset[indexes,]
subset = subset[order(subset[,2]),]
if (outcome == "heart attack"){
subset[, 11] <- as.numeric(subset[, 11])
indexes = !is.na(subset[, 11])
subset = subset[indexes,]
subset = subset[order(subset[,11]),]
}
else if (outcome == "heart failure"){
subset[, 17] <- as.numeric(subset[, 17])
indexes = !is.na(subset[, 17])
subset = subset[indexes,]
subset = subset[order(subset[,17]),]
}
else if (outcome == "pneumonia"){
subset[, 23] <- as.numeric(subset[, 23])
indexes = !is.na(subset[, 23])
subset = subset[indexes,]
subset = subset[order(subset[,23]),]
}
if(num == "best"){
return(subset[1,2])
}
else if(num == "worst"){
return(tail(subset[,2],1))
} else{
return(subset[num,2])
}
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
best("SC", "heart attack")
best <- function(state, outcome) {
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
uniqueStates = unique(dataset$State)
if (is.na(match(state,uniqueStates))){
stop("invalid state")
}
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death rate
indexes = dataset[, "State"] == state
subset = dataset[indexes,]
if (outcome == "heart attack"){
subset[, 11] <- as.numeric(subset[, 11])
subset = subset[order(subset[,11]),]
return(subset[1,2])
}
else if (outcome == "heart failure"){
subset[, 17] <- as.numeric(subset[, 17])
subset = subset[order(subset[,17]),]
return(subset[1,2])
}
else if (outcome == "pneumonia"){
subset[, 23] <- as.numeric(subset[, 23])
subset = subset[order(subset[,23]),]
return(subset[1,2])
}
}
# avaliacao
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("heart attack", 4)
rankhospital("HI", "heart attack", 4)
rankall <- function(outcome, num = "best") {
answer = data.frame()
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that the outcome is valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
uniqueStates = unique(dataset$State)
for (state in uniqueStates){
indexes = dataset[, "State"] == state
subset = dataset[indexes,]
subset[, 23] <- as.numeric(subset[, 23])
indexes = !is.na(subset[, 23])
subset = subset[indexes,]
subset = subset[order(subset[,23]),]
answer = rbind(answer, c(subset[,c(2,23)]))
}
## Return a data frame with the hospital names and the (abbreviated) state name
return(answer)
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
answer = data.frame()
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that the outcome is valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
uniqueStates = unique(dataset$State)
for (state in uniqueStates){
indexes = dataset[, "State"] == state
subset = dataset[indexes,]
subset[, 23] <- as.numeric(subset[, 23])
indexes = !is.na(subset[, 23])
subset = subset[indexes,]
subset = subset[order(subset[,23]),]
answer = rbind(answer, c(subset[,c(2,state)]))
}
## Return a data frame with the hospital names and the (abbreviated) state name
return(answer)
}
head(rankall("heart attack", 20), 10)
View(dataset)
View(dataset)
rankall <- function(outcome, num = "best") {
answer = data.frame()
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that the outcome is valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
uniqueStates = unique(dataset$State)
for (state in uniqueStates){
indexes = dataset[, "State"] == state
subset = dataset[indexes,]
subset[, 23] <- as.numeric(subset[, 23])
indexes = !is.na(subset[, 23])
subset = subset[indexes,]
subset = subset[order(subset[,23]),]
answer = rbind(answer, c(subset[,2], state))
}
## Return a data frame with the hospital names and the (abbreviated) state name
return(answer)
}
head(rankall("heart attack", 20), 10)
rankhospital("WA", "heart attack", 7)
head(rankall("heart attack", 20)[,2], 10)
rankall <- function(outcome, num = "best") {
answer = data.frame()
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that the outcome is valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
uniqueStates = unique(dataset$State)
for (state in uniqueStates){
indexes = dataset[, "State"] == state
subset = dataset[indexes,]
if (outcome == "heart attack"){
subset[, 11] <- as.numeric(subset[, 11])
indexes = !is.na(subset[, 11])
subset = subset[indexes,]
subset = subset[order(subset[,11]),]
answer = rbind(answer, c(subset[,11], state))
}
else if (outcome == "heart failure"){
subset[, 17] <- as.numeric(subset[, 17])
indexes = !is.na(subset[, 17])
subset = subset[indexes,]
subset = subset[order(subset[,17]),]
answer = rbind(answer, c(subset[,2], state))
}
else if (outcome == "pneumonia"){
subset[, 23] <- as.numeric(subset[, 23])
indexes = !is.na(subset[, 23])
subset = subset[indexes,]
subset = subset[order(subset[,23]),]
answer = rbind(answer, c(subset[,2], state))
}
}
## Return a data frame with the hospital names and the (abbreviated) state name
return(answer)
}
head(rankall("heart attack", 20)[,2], 10)
# avaliacao
best("SC", "heart attack")
best("NY", "pneumonia")
rankhospital("NV", "heart failure", 10)
rankhospital("NJ", "pneumonia", "worst")
rankhospital("HI", "heart attack", 4)
best("AK", "pneumonia")
rankhospital("WA", "heart attack", 7)
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("NY", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankall <- function(outcome, num = "best") {
answer = data.frame()
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that the outcome is valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
uniqueStates = unique(dataset$State)
for (state in uniqueStates){
indexes = dataset[, "State"] == state
subset = dataset[indexes,]
if (outcome == "heart attack"){
subset[, 11] <- as.numeric(subset[, 11])
indexes = !is.na(subset[, 11])
subset = subset[indexes,]
subset = subset[order(subset[,11]),]
answer = rbind(answer, c(subset[,11], state))
}
else if (outcome == "heart failure"){
subset[, 17] <- as.numeric(subset[, 17])
indexes = !is.na(subset[, 17])
subset = subset[indexes,]
subset = subset[order(subset[,17]),]
answer = rbind(answer, c(subset[,2], state))
}
else if (outcome == "pneumonia"){
subset[, 23] <- as.numeric(subset[, 23])
indexes = !is.na(subset[, 23])
subset = subset[indexes,]
subset = subset[order(subset[,23]),]
answer = rbind(answer, c(subset[,2], state))
}
}
## Return a data frame with the hospital names and the (abbreviated) state name
return(answer)
}
a = rankall("heart attack", 20), 10
a = rankall("heart attack", 20)
a
head(a)
rankall <- function(outcome, num = "best") {
answer = data.frame()
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that the outcome is valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
uniqueStates = unique(dataset$State)
for (state in uniqueStates){
indexes = dataset[, "State"] == state
subset = dataset[indexes,]
print(state)
if (outcome == "heart attack"){
subset[, 11] <- as.numeric(subset[, 11])
indexes = !is.na(subset[, 11])
subset = subset[indexes,]
subset = subset[order(subset[,11]),]
answer = rbind(answer, c(subset[,11], state))
}
else if (outcome == "heart failure"){
subset[, 17] <- as.numeric(subset[, 17])
indexes = !is.na(subset[, 17])
subset = subset[indexes,]
subset = subset[order(subset[,17]),]
answer = rbind(answer, c(subset[,2], state))
}
else if (outcome == "pneumonia"){
subset[, 23] <- as.numeric(subset[, 23])
indexes = !is.na(subset[, 23])
subset = subset[indexes,]
subset = subset[order(subset[,23]),]
answer = rbind(answer, c(subset[,2], state))
}
}
## Return a data frame with the hospital names and the (abbreviated) state name
return(answer)
}
a = rankall("heart attack", 20)
rankall <- function(outcome, num = "best") {
answer = data.frame()
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that the outcome is valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
uniqueStates = unique(dataset$State)
for (state in uniqueStates){
indexes = dataset[, "State"] == state
subset = dataset[indexes,]
print(state)
if (outcome == "heart attack"){
subset[, 11] <- as.numeric(subset[, 11])
indexes = !is.na(subset[, 11])
subset = subset[indexes,]
subset = subset[order(subset[,11]),]
answer = rbind(answer, c(subset[2,11], state))
}
else if (outcome == "heart failure"){
subset[, 17] <- as.numeric(subset[, 17])
indexes = !is.na(subset[, 17])
subset = subset[indexes,]
subset = subset[order(subset[,17]),]
answer = rbind(answer, c(subset[,2], state))
}
else if (outcome == "pneumonia"){
subset[, 23] <- as.numeric(subset[, 23])
indexes = !is.na(subset[, 23])
subset = subset[indexes,]
subset = subset[order(subset[,23]),]
answer = rbind(answer, c(subset[,2], state))
}
}
## Return a data frame with the hospital names and the (abbreviated) state name
return(answer)
}
a = rankall("heart attack", 20)
head(a)
rankall <- function(outcome, num = "best") {
answer = data.frame()
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that the outcome is valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
uniqueStates = unique(dataset$State)
for (state in uniqueStates){
indexes = dataset[, "State"] == state
subset = dataset[indexes,]
print(state)
if (outcome == "heart attack"){
subset[, 11] <- as.numeric(subset[, 11])
indexes = !is.na(subset[, 11])
subset = subset[indexes,]
subset = subset[order(subset[,11]),]
answer = rbind(answer, c(subset[num,2], state))
}
else if (outcome == "heart failure"){
subset[, 17] <- as.numeric(subset[, 17])
indexes = !is.na(subset[, 17])
subset = subset[indexes,]
subset = subset[order(subset[,17]),]
answer = rbind(answer, c(subset[num,2], state))
}
else if (outcome == "pneumonia"){
subset[, 23] <- as.numeric(subset[, 23])
indexes = !is.na(subset[, 23])
subset = subset[indexes,]
subset = subset[order(subset[,23]),]
}
if(num == "best"){
answer = rbind(answer, c(subset[1,2], state))
}
else if(num == "worst"){
answer = rbind(answer, c(tail(subset[,2],1), state))
} else{
answer = rbind(answer, c(subset[num,2], state))
}
}
## Return a data frame with the hospital names and the (abbreviated) state name
return(answer)
}
a = rankall("heart attack", 20)
head(a)
library(datasets)
data(iris)
?iris
rankall <- function(outcome, num = "best") {
answer = data.frame()
## Read outcome data
dataset = read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that the outcome is valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
uniqueStates = unique(dataset$State)
for (state in uniqueStates){
indexes = dataset[, "State"] == state
subset = dataset[indexes,]
if (outcome == "heart attack"){
subset[, 11] <- as.numeric(subset[, 11])
indexes = !is.na(subset[, 11])
subset = subset[indexes,]
subset = subset[order(subset[,11]),]
answer = rbind(answer, c(subset[num,2], state))
}
else if (outcome == "heart failure"){
subset[, 17] <- as.numeric(subset[, 17])
indexes = !is.na(subset[, 17])
subset = subset[indexes,]
subset = subset[order(subset[,17]),]
answer = rbind(answer, c(subset[num,2], state))
}
else if (outcome == "pneumonia"){
subset[, 23] <- as.numeric(subset[, 23])
indexes = !is.na(subset[, 23])
subset = subset[indexes,]
subset = subset[order(subset[,23]),]
}
if(num == "best"){
answer = rbind(answer, c(subset[1,2], state))
}
else if(num == "worst"){
answer = rbind(answer, c(tail(subset[,2],1), state))
} else{
answer = rbind(answer, c(subset[num,2], state))
}
}
## Return a data frame with the hospital names and the (abbreviated) state name
return(answer)
}
a = rankall("heart attack", 20)
a
