install.packages("devtools")
install.packages("KernSmooth")
library(KernSmooth)
detach("package:KernSmooth", unload = TRUE)
install.packages("devtools")
detach("package:grDevices", unload = TRUE)
library(devtools) # Carrega uma biblioteca instalada, não usa aspas
library(devtools) # Carrega uma biblioteca instalada, não usa aspas
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages(c('devtools','curl'))
install.packages(c('devtools','curl'))
# sudo apt install libcurl4-openssl-dev
install.packages(c('devtools','curl'))
# terminal fala que componentes faltam no ubuntu
# sudo apt install libcurl4-openssl-dev
# sudo apt install libxml2-dev
# sudo apt install libssl-dev
install.packages(c('devtools','curl'))
help(package = "devtools")
setwd("~/Área de Trabalho/R Programming/Semana 2")
print("x = 3")
print("i:",i)
print("i:"+i)
# 1. for
for(i in 1:10){
print("i:",i)
}
print("i:",i)
# 1. for
for(i in 1:10){
print("i:",i)
}
# 1. for
for(i in 1:10){
print("i:" + i)
}
for(i in 1:length(x)){
print("x[]:", x[i])
}
x = 1:5
for(i in 1:length(x)){
print("x[]:", x[i])
}
# 1. for
for(i in 1:10){
print("i: %i" + i)
}
print("i: %i", i)
print("i: %i", i)
# 1. if else
x = 3
if (x < 3){
print("x < 3")
} else if (x < 3){
print("x < 3")
} else{
print("x = 3")
}
# 1. for
for(i in 1:10){
print("i: %i", i)
}
x = 1:5
for(i in 1:length(x)){
print("x[]: %i", x[i])
}
# 1. if else
x = 3
if (x < 3){
print("x < 3")
} else if (x < 3){
print("x < 3")
} else{
print("x = 3")
}
# 1. for
for(i in 1:10){
print(i)
}
x = 1:5
for(i in 1:length(x)){
print(x[i])
}
# 1. if else
x = 3
if (x < 3){
print("x < 3")
} else if (x < 3){
print("x < 3")
} else{
print("x = 3")
}
# 1. for
for(i in 1:10){
print(i)
}
x = 1:5
for(i in 1:length(x)){
print(x[i])
}
for(i in x){
print(i)
}
for(i in x) print(i)
x = matrix(1:10, nrow=2, ncol = 5)
x
x = 1:5
for(i in seq_len(x)){
print(x[i])
}
seq_len(5)
for(i in seq_len(nrow(x))){
for(i in 1:length(x)){
print(x[i,j])
}
}
x = matrix(1:10, nrow=2, ncol = 5)
for(i in seq_len(nrow(x))){
for(i in 1:length(x)){
print(x[i,j])
}
}
for(i in seq_len(nrow(x))){
for(j in 1:length(x)){
print(x[i,j])
}
}
for(i in seq_len(nrow(x))){
for(j in 1:seq_len(ncol(x))){
print(x[i,j])
}
}
for(i in seq_len(nrow(x))){
for(j in seq_len(ncol(x))){
print(x[i,j])
}
}
for(i in seq_len(x)){
print(x[i])
}
x = 1:5
for(i in seq_len(5)){
print(x[i])
}
for(i in seq_len(510){
for(i in seq_len(10){
for(i in seq_len(10)){
print(x[i])
}
for(i in seq_len(10)){
print(i)
}
print(i)
for(i in seq_len(10)){
print(i)
}
